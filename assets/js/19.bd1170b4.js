(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{371:function(e,t,a){"use strict";a.r(t);var n=a(45),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"setting-up-a-project"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-a-project"}},[e._v("#")]),e._v(" Setting up a project")]),e._v(" "),a("h2",{attrs:{id:"getting-our-server-up-and-running"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-our-server-up-and-running"}},[e._v("#")]),e._v(" Getting our server up and running")]),e._v(" "),a("p",[e._v("The first thing we are going to want to do is setup a project locally and add some version control to it. For this project we are going to be using "),a("a",{attrs:{href:"laravel.com"}},[e._v("Laravel")]),e._v(" as our framework of choice. The first step here is to install everything necessary to create a new Laravel project. Its always recommended to familiarize yourself with a frameworks "),a("a",{attrs:{href:"laravel.com/docs/8.x"}},[e._v("documentation")]),e._v(".  For Laravel there are a few prerequisites which are to have PHP and Composer installed. Once those are installed we are going to go ahead and run the following:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("composer")]),e._v(" global require laravel/installer\n\nlaravel new tinyuri\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" tinyuri\n\nphp artisan serve\n")])])]),a("p",[e._v("Once we do that we should see terminal output like the following:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("Starting Laravel development server: http://127.0.0.1:8000\n")])])]),a("p",[e._v("and if we navigate there we should see our server up and running!\n"),a("img",{attrs:{src:e.$withBase("/01_up_and_running.png"),alt:"up and running"}})]),e._v(" "),a("h2",{attrs:{id:"adding-version-control"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adding-version-control"}},[e._v("#")]),e._v(" Adding version control")]),e._v(" "),a("p",[e._v("The next step is to add some version control to our project so we can keep track of changes and implement features on separate branches. For this we will be using "),a("a",{attrs:{href:"github.com"}},[e._v("Github")]),e._v(" but there are plenty of other options. We are going to create a GitHub repository with the same name as our project, tinyuri:")]),e._v(" "),a("img",{attrs:{src:e.$withBase("/02_github_repo.png"),alt:"github repo"}}),e._v(" "),a("p",[e._v("Once we create the repository we are going to see some instructions on how to add git to our project:")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" init\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"first commit"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" branch -M main\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" origin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("your url here"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" push -u origin main\n")])])]),a("p",[e._v("A new Laravel project comes with a README.md so we are removing that step from what we need to do.  After we have finished these steps we should now be able to refresh our GitHub repository and see the Laravel Skeleton application code.")])])}),[],!1,null,null,null);t.default=s.exports}}]);